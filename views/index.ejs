<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Razorpay Integration</title>
</head>
<body>
    <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Razorpay Payment Integration</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <h1>Pay with Razorpay</h1>
  <form id="paymentForm">
    <label for="amount">Amount:</label>
    <input type="number" id="amount" name="amount" required>

    <button type="button" id="payButton">Pay Now</button>
  </form>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    document.getElementById('payButton').onclick = async function () {
      const amount = document.getElementById('amount').value;

      // Call the server to create an order
      const order = await fetch('/createOrder', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ amount })
      }).then(res => res.json());

      // Razorpay checkout options
      const options = {
        key: "YOUR_KEY_ID", // Enter the Key ID generated from the Razorpay Dashboard
        amount: order.amount,
        currency: order.currency,
        name: "Your Company Name",
        description: "Test Transaction",
        order_id: order.id, // This is the order ID returned from the backend
        handler: async function (response) {
          const paymentData = {
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
          };

          // Verify the payment on the server
          const result = await fetch('/verifyPayment', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(paymentData),
          });

          if (result.ok) {
            window.location.href = '/success';
          } else {
            alert('Payment verification failed');
          }
        },
        theme: {
          color: "#3399cc"
        }
      };

      const rzp1 = new Razorpay(options);
      rzp1.open();
    };
  </script>
</body>
</html>

</body>
</html>
